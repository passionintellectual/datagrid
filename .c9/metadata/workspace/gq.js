{"filter":false,"title":"gq.js","tooltip":"/gq.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":23,"column":8},"end":{"row":23,"column":12},"action":"insert","lines":["    "],"id":291}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":16},"action":"insert","lines":["    "],"id":292}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":16},"action":"remove","lines":["    "],"id":293}],[{"start":{"row":23,"column":8},"end":{"row":23,"column":12},"action":"remove","lines":["    "],"id":294}],[{"start":{"row":23,"column":8},"end":{"row":23,"column":12},"action":"insert","lines":["    "],"id":295}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":["$"],"id":296}],[{"start":{"row":23,"column":13},"end":{"row":23,"column":14},"action":"insert","lines":["q"],"id":297}],[{"start":{"row":23,"column":14},"end":{"row":23,"column":15},"action":"insert","lines":["."],"id":298}],[{"start":{"row":23,"column":15},"end":{"row":23,"column":16},"action":"insert","lines":["t"],"id":299}],[{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"insert","lines":["h"],"id":300}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"insert","lines":["e"],"id":301}],[{"start":{"row":23,"column":18},"end":{"row":23,"column":19},"action":"insert","lines":["n"],"id":302}],[{"start":{"row":23,"column":19},"end":{"row":23,"column":21},"action":"insert","lines":["()"],"id":303}],[{"start":{"row":23,"column":20},"end":{"row":23,"column":21},"action":"insert","lines":["a"],"id":304}],[{"start":{"row":23,"column":21},"end":{"row":23,"column":22},"action":"insert","lines":["r"],"id":305}],[{"start":{"row":23,"column":20},"end":{"row":23,"column":22},"action":"remove","lines":["ar"],"id":306},{"start":{"row":23,"column":20},"end":{"row":23,"column":28},"action":"insert","lines":["argument"]}],[{"start":{"row":23,"column":29},"end":{"row":23,"column":30},"action":"insert","lines":[";"],"id":307}],[{"start":{"row":23,"column":12},"end":{"row":23,"column":14},"action":"remove","lines":["$q"],"id":308},{"start":{"row":23,"column":12},"end":{"row":23,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":23,"column":13},"end":{"row":23,"column":14},"action":"insert","lines":["h"],"id":309}],[{"start":{"row":23,"column":14},"end":{"row":23,"column":15},"action":"insert","lines":["i"],"id":310}],[{"start":{"row":23,"column":15},"end":{"row":23,"column":16},"action":"insert","lines":["s"],"id":311}],[{"start":{"row":23,"column":16},"end":{"row":23,"column":17},"action":"insert","lines":["."],"id":312}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"insert","lines":["q"],"id":313}],[{"start":{"row":2,"column":21},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":314},{"start":{"row":3,"column":0},"end":{"row":3,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":0,"column":0},"end":{"row":30,"column":8},"action":"remove","lines":["angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function($timeout, $q) {","        var $gq = {};","        ","        var gq = function(key) {","            if ($gq[key]) {","                return $gq[key];","            }","","            this.key = key;","            $gq[key] = this;","            ","            this.q  = $q.defer();","        };","","         ","        ","        gq.prototype.resolve= function (value) {","            // body...","            this.q.resolve(value);","        }","        ","        gq.prototype.then = function (argument) {","            // body...","            this.q.then(argument);","        }","        ","        ","        return gq;","        ","    }]);"],"id":315}],[{"start":{"row":0,"column":0},"end":{"row":64,"column":8},"action":"insert","lines":["angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","            this.qCollection = this.qCollection || [];","            var oldQ = this.q;","            this.qCollection.push(oldQ);","            this.q = $q.defer();","            var thisobj = this;","            this.thenFunctions.forEach(function(itm, index) {","                thisobj.q.promise.then(itm[0], itm[1]);","            });","            this.catchFunctions.forEach(function(itm, index) {","                thisobj.q.promise.catch(itm);","            });","            this.finallyFunctions.forEach(function(itm, index) {","                thisobj.q.promise.finally(itm);","            });","        }","        var gq = function(key) {","","","            this.thenFunctions = this.thenFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","            var thisobj = this;","            getNewDefer.bind(this)();","","        };","","","","        gq.prototype.resolve = function(value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","              this.q.resolve(value);","             ","                getNewDefer.bind(this)();","","             ","          ","        }","","","        gq.prototype.then = function(fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gq.prototype.reject = function(val) {","            this.q.reject(val);","        }","        gq.prototype.catch = function(fn) {","            this.q.promise.catch(fn)","        }","","        gq.prototype.finally = function(fn) {","            this.q.promise.finally(fn)","        }","       return gq;","","    }]);"],"id":316}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"insert","lines":["/"],"id":317}],[{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["/"],"id":318}],[{"start":{"row":7,"column":42},"end":{"row":7,"column":43},"action":"insert","lines":[" "],"id":319}],[{"start":{"row":7,"column":43},"end":{"row":7,"column":44},"action":"insert","lines":["I"],"id":320}],[{"start":{"row":7,"column":44},"end":{"row":7,"column":45},"action":"insert","lines":["F"],"id":321}],[{"start":{"row":7,"column":45},"end":{"row":7,"column":46},"action":"insert","lines":[" "],"id":322}],[{"start":{"row":7,"column":46},"end":{"row":7,"column":47},"action":"insert","lines":["y"],"id":323}],[{"start":{"row":7,"column":47},"end":{"row":7,"column":48},"action":"insert","lines":["o"],"id":324}],[{"start":{"row":7,"column":48},"end":{"row":7,"column":49},"action":"insert","lines":["u"],"id":325}],[{"start":{"row":7,"column":49},"end":{"row":7,"column":50},"action":"insert","lines":[" "],"id":326}],[{"start":{"row":7,"column":50},"end":{"row":7,"column":51},"action":"insert","lines":["w"],"id":327}],[{"start":{"row":7,"column":51},"end":{"row":7,"column":52},"action":"insert","lines":["a"],"id":328}],[{"start":{"row":7,"column":52},"end":{"row":7,"column":53},"action":"insert","lines":["n"],"id":329}],[{"start":{"row":7,"column":53},"end":{"row":7,"column":54},"action":"insert","lines":["t"],"id":330}],[{"start":{"row":7,"column":54},"end":{"row":7,"column":55},"action":"insert","lines":[" "],"id":331}],[{"start":{"row":7,"column":55},"end":{"row":7,"column":56},"action":"insert","lines":["t"],"id":332}],[{"start":{"row":7,"column":56},"end":{"row":7,"column":57},"action":"insert","lines":["o"],"id":333}],[{"start":{"row":7,"column":57},"end":{"row":7,"column":58},"action":"insert","lines":[" "],"id":334}],[{"start":{"row":7,"column":58},"end":{"row":7,"column":59},"action":"insert","lines":["m"],"id":335}],[{"start":{"row":7,"column":59},"end":{"row":7,"column":60},"action":"insert","lines":["a"],"id":336}],[{"start":{"row":7,"column":60},"end":{"row":7,"column":61},"action":"insert","lines":["i"],"id":337}],[{"start":{"row":7,"column":61},"end":{"row":7,"column":62},"action":"insert","lines":["n"],"id":338}],[{"start":{"row":7,"column":62},"end":{"row":7,"column":63},"action":"insert","lines":["t"],"id":339}],[{"start":{"row":7,"column":63},"end":{"row":7,"column":64},"action":"insert","lines":["a"],"id":340}],[{"start":{"row":7,"column":64},"end":{"row":7,"column":65},"action":"insert","lines":["i"],"id":341}],[{"start":{"row":7,"column":65},"end":{"row":7,"column":66},"action":"insert","lines":["n"],"id":342}],[{"start":{"row":7,"column":66},"end":{"row":7,"column":67},"action":"insert","lines":[" "],"id":343}],[{"start":{"row":7,"column":67},"end":{"row":7,"column":68},"action":"insert","lines":["t"],"id":344}],[{"start":{"row":7,"column":68},"end":{"row":7,"column":69},"action":"insert","lines":["h"],"id":345}],[{"start":{"row":7,"column":69},"end":{"row":7,"column":70},"action":"insert","lines":["e"],"id":346}],[{"start":{"row":7,"column":70},"end":{"row":7,"column":71},"action":"insert","lines":[" "],"id":347}],[{"start":{"row":7,"column":71},"end":{"row":7,"column":72},"action":"insert","lines":["h"],"id":348}],[{"start":{"row":7,"column":72},"end":{"row":7,"column":73},"action":"insert","lines":["i"],"id":349}],[{"start":{"row":7,"column":73},"end":{"row":7,"column":74},"action":"insert","lines":["s"],"id":350}],[{"start":{"row":7,"column":74},"end":{"row":7,"column":75},"action":"insert","lines":["t"],"id":351}],[{"start":{"row":7,"column":75},"end":{"row":7,"column":76},"action":"insert","lines":["o"],"id":352}],[{"start":{"row":7,"column":76},"end":{"row":7,"column":77},"action":"insert","lines":["r"],"id":353}],[{"start":{"row":7,"column":77},"end":{"row":7,"column":78},"action":"insert","lines":["y"],"id":354}],[{"start":{"row":7,"column":78},"end":{"row":7,"column":79},"action":"insert","lines":[" "],"id":355}],[{"start":{"row":7,"column":79},"end":{"row":7,"column":80},"action":"insert","lines":["o"],"id":356}],[{"start":{"row":7,"column":80},"end":{"row":7,"column":81},"action":"insert","lines":["f"],"id":357}],[{"start":{"row":7,"column":81},"end":{"row":7,"column":82},"action":"insert","lines":[" "],"id":358}],[{"start":{"row":7,"column":82},"end":{"row":7,"column":83},"action":"insert","lines":["r"],"id":359}],[{"start":{"row":7,"column":83},"end":{"row":7,"column":84},"action":"insert","lines":["e"],"id":360}],[{"start":{"row":7,"column":84},"end":{"row":7,"column":85},"action":"insert","lines":["s"],"id":361}],[{"start":{"row":7,"column":85},"end":{"row":7,"column":86},"action":"insert","lines":["o"],"id":362}],[{"start":{"row":7,"column":86},"end":{"row":7,"column":87},"action":"insert","lines":["l"],"id":363}],[{"start":{"row":7,"column":87},"end":{"row":7,"column":88},"action":"insert","lines":["v"],"id":364}],[{"start":{"row":7,"column":88},"end":{"row":7,"column":89},"action":"insert","lines":["e"],"id":365}],[{"start":{"row":7,"column":89},"end":{"row":7,"column":90},"action":"insert","lines":["d"],"id":366}],[{"start":{"row":7,"column":90},"end":{"row":7,"column":91},"action":"insert","lines":[" "],"id":367}],[{"start":{"row":7,"column":91},"end":{"row":7,"column":92},"action":"insert","lines":["p"],"id":368}],[{"start":{"row":7,"column":92},"end":{"row":7,"column":93},"action":"insert","lines":["r"],"id":369}],[{"start":{"row":7,"column":93},"end":{"row":7,"column":94},"action":"insert","lines":["o"],"id":370}],[{"start":{"row":7,"column":94},"end":{"row":7,"column":95},"action":"insert","lines":["m"],"id":371}],[{"start":{"row":7,"column":95},"end":{"row":7,"column":96},"action":"insert","lines":["i"],"id":372}],[{"start":{"row":7,"column":96},"end":{"row":7,"column":97},"action":"insert","lines":["s"],"id":373}],[{"start":{"row":7,"column":97},"end":{"row":7,"column":98},"action":"insert","lines":["e"],"id":374}],[{"start":{"row":7,"column":98},"end":{"row":7,"column":99},"action":"insert","lines":["s"],"id":375}],[{"start":{"row":7,"column":99},"end":{"row":7,"column":100},"action":"insert","lines":["."],"id":376}],[{"start":{"row":7,"column":100},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":377},{"start":{"row":8,"column":0},"end":{"row":8,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":7,"column":12},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":378},{"start":{"row":8,"column":0},"end":{"row":8,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":8,"column":43},"end":{"row":9,"column":12},"action":"remove","lines":["IF you want to maintain the history of resolved promises.","            "],"id":379}],[{"start":{"row":7,"column":12},"end":{"row":8,"column":12},"action":"insert","lines":["IF you want to maintain the history of resolved promises.","            "],"id":380}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":15},"action":"insert","lines":["// "],"id":381}],[{"start":{"row":8,"column":12},"end":{"row":9,"column":12},"action":"remove","lines":["","            "],"id":382}],[{"start":{"row":5,"column":11},"end":{"row":5,"column":54},"action":"remove","lines":[" this.qCollection = this.qCollection || [];"],"id":383}],[{"start":{"row":7,"column":72},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":384},{"start":{"row":8,"column":0},"end":{"row":8,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":8,"column":12},"end":{"row":8,"column":55},"action":"insert","lines":[" this.qCollection = this.qCollection || [];"],"id":385}],[{"start":{"row":8,"column":12},"end":{"row":8,"column":15},"action":"insert","lines":["// "],"id":386}],[{"start":{"row":55,"column":31},"end":{"row":56,"column":0},"action":"insert","lines":["",""],"id":387},{"start":{"row":56,"column":0},"end":{"row":56,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":56,"column":12},"end":{"row":56,"column":38},"action":"insert","lines":[" getNewDefer.bind(this)();"],"id":388}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":8},"action":"remove","lines":["angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","           ","            var oldQ = this.q;","            // IF you want to maintain the history of resolved promises.","            //  this.qCollection = this.qCollection || [];","            //this.qCollection.push(oldQ); ","            this.q = $q.defer();","            var thisobj = this;","            this.thenFunctions.forEach(function(itm, index) {","                thisobj.q.promise.then(itm[0], itm[1]);","            });","            this.catchFunctions.forEach(function(itm, index) {","                thisobj.q.promise.catch(itm);","            });","            this.finallyFunctions.forEach(function(itm, index) {","                thisobj.q.promise.finally(itm);","            });","        }","        var gq = function(key) {","","","            this.thenFunctions = this.thenFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","            var thisobj = this;","            getNewDefer.bind(this)();","","        };","","","","        gq.prototype.resolve = function(value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","              this.q.resolve(value);","             ","                getNewDefer.bind(this)();","","             ","          ","        }","","","        gq.prototype.then = function(fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gq.prototype.reject = function(val) {","            this.q.reject(val);","             getNewDefer.bind(this)();","        }","        gq.prototype.catch = function(fn) {","            this.q.promise.catch(fn)","        }","","        gq.prototype.finally = function(fn) {","            this.q.promise.finally(fn)","        }","       return gq;","","    }]);"],"id":389},{"start":{"row":0,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["/**"," * Created by nemade_g on 18-09-2015."," */","angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function ($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","","            var oldQ = this.q;","            // IF you want to maintain the history of resolved promises.","            //  this.qCollection = this.qCollection || [];","            //this.qCollection.push(oldQ);","            this.q = $q.defer();","            this.gPromise.q = this.q;","            var thisobj = this.gPromise;","","","            if (this.resetOnResolvePromise) {","                this.gPromise.reset();","            } else {","                this.gPromise.thenFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.then(itm[0], itm[1]);","                });","                this.gPromise.catchFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.catch(itm);","                });","                this.gPromise.finallyFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.finally(itm);","                });","            }","","        }","","        var gPromise = function (q) {","            this.q = q;","            this.thenFunctions = this.thenFunctions || [];","            this.thenAlwaysFunctions = this.thenAlwaysFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","        }","        gPromise.prototype.then = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.thenAlways = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenAlwaysFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.reject = function (val) {","            this.q.reject(val);","            getNewDefer.bind(this)();","        }","        gPromise.prototype.catch = function (fn) {","            this.q.promise.catch(fn)","        }","","        gPromise.prototype.finally = function (fn) {","            this.q.promise.finally(fn)","        }","        gPromise.prototype.reset = function () {","            this.thenFunctions = [];","            //Commmenting this cause, we don't want to delete thenAlways functions after each resolve.","            //this.thenAlwaysFunctions = [];","            this.catchFunctions = [];","            this.finallyFunctions = [];","        }","","        var gq = function (key) { // This is the constructor function.","","","","            var thisobj = this;","            this.gPromise = new gPromise();","            getNewDefer.bind(this)();","        };","        gq.prototype.promise = function () {","            return this.gPromise;","        }","        gq.prototype.innerPromise = function () {","            return this.q.promise();","        }","","        gq.prototype.resestOnResolve = function () {","            this.resetOnResolvePromise = true;","            return this;","        }","        gq.prototype.resolve = function (value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","            this.q.resolve(value);","","            getNewDefer.bind(this)();","","","        }","","","        return gq;","","    }]);",""]}],[{"start":{"row":0,"column":0},"end":{"row":107,"column":0},"action":"remove","lines":["/**"," * Created by nemade_g on 18-09-2015."," */","angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function ($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","","            var oldQ = this.q;","            // IF you want to maintain the history of resolved promises.","            //  this.qCollection = this.qCollection || [];","            //this.qCollection.push(oldQ);","            this.q = $q.defer();","            this.gPromise.q = this.q;","            var thisobj = this.gPromise;","","","            if (this.resetOnResolvePromise) {","                this.gPromise.reset();","            } else {","                this.gPromise.thenFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.then(itm[0], itm[1]);","                });","                this.gPromise.catchFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.catch(itm);","                });","                this.gPromise.finallyFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.finally(itm);","                });","            }","","        }","","        var gPromise = function (q) {","            this.q = q;","            this.thenFunctions = this.thenFunctions || [];","            this.thenAlwaysFunctions = this.thenAlwaysFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","        }","        gPromise.prototype.then = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.thenAlways = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenAlwaysFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.reject = function (val) {","            this.q.reject(val);","            getNewDefer.bind(this)();","        }","        gPromise.prototype.catch = function (fn) {","            this.q.promise.catch(fn)","        }","","        gPromise.prototype.finally = function (fn) {","            this.q.promise.finally(fn)","        }","        gPromise.prototype.reset = function () {","            this.thenFunctions = [];","            //Commmenting this cause, we don't want to delete thenAlways functions after each resolve.","            //this.thenAlwaysFunctions = [];","            this.catchFunctions = [];","            this.finallyFunctions = [];","        }","","        var gq = function (key) { // This is the constructor function.","","","","            var thisobj = this;","            this.gPromise = new gPromise();","            getNewDefer.bind(this)();","        };","        gq.prototype.promise = function () {","            return this.gPromise;","        }","        gq.prototype.innerPromise = function () {","            return this.q.promise();","        }","","        gq.prototype.resestOnResolve = function () {","            this.resetOnResolvePromise = true;","            return this;","        }","        gq.prototype.resolve = function (value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","            this.q.resolve(value);","","            getNewDefer.bind(this)();","","","        }","","","        return gq;","","    }]);",""],"id":390},{"start":{"row":0,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["/**"," * Created by nemade_g on 18-09-2015."," */","angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function ($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","","            var oldQ = this.q;","            // IF you want to maintain the history of resolved promises.","            //  this.qCollection = this.qCollection || [];","            //this.qCollection.push(oldQ);","            this.q = $q.defer();","            this.gPromise.q = this.q;","            var thisobj = this.gPromise;","","","            if (this.resetOnResolvePromise) {","                this.gPromise.reset();","            } else {","                this.gPromise.thenFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.then(itm[0], itm[1]);","                });","                this.gPromise.catchFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.catch(itm);","                });","                this.gPromise.finallyFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.finally(itm);","                });","            }","","        }","","        var gPromise = function (q) {","            this.q = q;","            this.thenFunctions = this.thenFunctions || [];","            this.thenAlwaysFunctions = this.thenAlwaysFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","        }","        gPromise.prototype.then = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.thenAlways = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenAlwaysFunctions.push([fn, errorFn]);","        }","","","        gPromise.prototype.catch = function (fn) {","            this.q.promise.catch(fn)","        }","","        gPromise.prototype.finally = function (fn) {","            this.q.promise.finally(fn)","        }","        gPromise.prototype.reset = function () {","            this.thenFunctions = [];","            //Commmenting this cause, we don't want to delete thenAlways functions after each resolve.","            //this.thenAlwaysFunctions = [];","            this.catchFunctions = [];","            this.finallyFunctions = [];","        }","","        var gq = function (key) { // This is the constructor function.","","","","            var thisobj = this;","            this.gPromise = new gPromise();","            getNewDefer.bind(this)();","        };","        gq.prototype.promise = function () {","            return this.gPromise;","        }","        gq.prototype.innerPromise = function () {","            return this.q.promise();","        }","","        gq.prototype.resestOnResolve = function () {","            this.resetOnResolvePromise = true;","            return this;","        }","        gq.prototype.resolve = function (value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","            this.q.resolve(value);","","            getNewDefer.bind(this)();","","","        }","","        gq.prototype.reject = function (val) {","            this.q.reject(val);","            getNewDefer.bind(this)();","        }","        return gq;","","    }]);",""]}],[{"start":{"row":0,"column":0},"end":{"row":107,"column":0},"action":"remove","lines":["/**"," * Created by nemade_g on 18-09-2015."," */","angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function ($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","","            var oldQ = this.q;","            // IF you want to maintain the history of resolved promises.","            //  this.qCollection = this.qCollection || [];","            //this.qCollection.push(oldQ);","            this.q = $q.defer();","            this.gPromise.q = this.q;","            var thisobj = this.gPromise;","","","            if (this.resetOnResolvePromise) {","                this.gPromise.reset();","            } else {","                this.gPromise.thenFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.then(itm[0], itm[1]);","                });","                this.gPromise.catchFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.catch(itm);","                });","                this.gPromise.finallyFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.finally(itm);","                });","            }","","        }","","        var gPromise = function (q) {","            this.q = q;","            this.thenFunctions = this.thenFunctions || [];","            this.thenAlwaysFunctions = this.thenAlwaysFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","        }","        gPromise.prototype.then = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.thenAlways = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenAlwaysFunctions.push([fn, errorFn]);","        }","","","        gPromise.prototype.catch = function (fn) {","            this.q.promise.catch(fn)","        }","","        gPromise.prototype.finally = function (fn) {","            this.q.promise.finally(fn)","        }","        gPromise.prototype.reset = function () {","            this.thenFunctions = [];","            //Commmenting this cause, we don't want to delete thenAlways functions after each resolve.","            //this.thenAlwaysFunctions = [];","            this.catchFunctions = [];","            this.finallyFunctions = [];","        }","","        var gq = function (key) { // This is the constructor function.","","","","            var thisobj = this;","            this.gPromise = new gPromise();","            getNewDefer.bind(this)();","        };","        gq.prototype.promise = function () {","            return this.gPromise;","        }","        gq.prototype.innerPromise = function () {","            return this.q.promise();","        }","","        gq.prototype.resestOnResolve = function () {","            this.resetOnResolvePromise = true;","            return this;","        }","        gq.prototype.resolve = function (value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","            this.q.resolve(value);","","            getNewDefer.bind(this)();","","","        }","","        gq.prototype.reject = function (val) {","            this.q.reject(val);","            getNewDefer.bind(this)();","        }","        return gq;","","    }]);",""],"id":391},{"start":{"row":0,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["/**"," * Created by nemade_g on 18-09-2015."," */","angular.module('gtpWebApp.core')","    .factory('$gq', ['$timeout', '$q', function ($timeout, $q) {","        var $gq = {};","","        function getNewDefer() {","","            var oldQ = this.q;","            // IF you want to maintain the history of resolved promises.","            //  this.qCollection = this.qCollection || [];","            //this.qCollection.push(oldQ);","            this.q = $q.defer();","            this.gPromise.q = this.q;","            var thisobj = this.gPromise;","","","            if (this.resetOnResolvePromise) {","                this.gPromise.reset();","            } else {","                this.gPromise.thenFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.then(itm[0], itm[1]);","                });","                this.gPromise.catchFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.catch(itm);","                });","                this.gPromise.finallyFunctions.forEach(function (itm, index) {","                    thisobj.q.promise.finally(itm);","                });","            }","","        }","","        var gPromise = function (q) {","            this.q = q;","            this.thenFunctions = this.thenFunctions || [];","            this.thenAlwaysFunctions = this.thenAlwaysFunctions || [];","            this.catchFunctions = this.catchFunctions || [];","            this.finallyFunctions = this.finallyFunctions || [];","        }","        gPromise.prototype.then = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.thenAlways = function (fn, errorFn) {","            // body...","            this.q.promise.then(fn, errorFn);","","            this.thenAlwaysFunctions.push([fn, errorFn]);","        }","","        gPromise.prototype.reject = function (val) {","            this.q.reject(val);","            getNewDefer.bind(this)();","        }","        gPromise.prototype.catch = function (fn) {","            this.q.promise.catch(fn)","        }","","        gPromise.prototype.finally = function (fn) {","            this.q.promise.finally(fn)","        }","        gPromise.prototype.reset = function () {","            this.thenFunctions = [];","            //Commmenting this cause, we don't want to delete thenAlways functions after each resolve.","            //this.thenAlwaysFunctions = [];","            this.catchFunctions = [];","            this.finallyFunctions = [];","        }","","        var gq = function (key) { // This is the constructor function.","","","","            var thisobj = this;","            this.gPromise = new gPromise();","            getNewDefer.bind(this)();","        };","        gq.prototype.promise = function () {","            return this.gPromise;","        }","        gq.prototype.innerPromise = function () {","            return this.q.promise();","        }","","        gq.prototype.resestOnResolve = function () {","            this.resetOnResolvePromise = true;","            return this;","        }","        gq.prototype.resolve = function (value) {","            // body... promise.$$state.status === 1 // resolved","            //promise.$$state.status === 2 // rejected","            this.q.resolve(value);","","            getNewDefer.bind(this)();","","","        }","","","        return gq;","","    }]);",""]}]]},"ace":{"folds":[],"scrolltop":909,"scrollleft":0,"selection":{"start":{"row":73,"column":0},"end":{"row":73,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":63,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1444375681316,"hash":"a0349c073da9ffcda61e90c538bf69ac02daf784"}